"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createNodesV2 = void 0;
const tslib_1 = require("tslib");
exports.createNodesV2 = [
    'day-*/*.data*.txt',
    (files, _options) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
        const result = [];
        for (const file of files) {
            result.push(createTargetsForFile(file));
        }
        return result;
    }),
];
function createTargetsForFile(file) {
    const [day, part, dataSetName] = deriveFromFileName(file);
    const aliases = [
        `day-${day}-${part}${dataSetName ? `-${dataSetName}` : ''}`,
        `${day}-${part}${dataSetName ? `-${dataSetName}` : ''}`,
    ];
    if (part === 'a') {
        aliases.push(`day-${day}${dataSetName ? `-${dataSetName}` : ''}`);
        aliases.push(`${day}${dataSetName ? `-${dataSetName}` : ''}`);
    }
    const task = {
        command: `tsx day-${day}/${part}${dataSetName ? ` ${dataSetName}` : ''}`,
    };
    const result = [
        file,
        {
            projects: {
                '.': {
                    name: 'aoc',
                    root: '.',
                    sourceRoot: '.',
                    targets: {},
                },
            },
        },
    ];
    // add standard targets
    for (const alias of aliases) {
        result[1].projects['.'].targets[alias] = task;
    }
    // add targets for watching
    for (const alias of aliases) {
        result[1].projects['.'].targets[`watch-${alias}`] = {
            executor: 'nx:run-commands',
            options: {
                commands: [`nx watch --all -- nx ${alias}`, `nx ${alias}`],
            },
        };
    }
    return result;
}
function deriveFromFileName(file) {
    const [directory, fileName] = file.split('/');
    const day = directory.split('-')[1];
    const part = fileName.split('.')[0];
    // 'day-1/a.data.txt' => dataSetName should be undefined
    // 'day-1/a.data.sample.txt' => dataSetName should be 'sample'
    // 'day-1/a.data.foo.txt' => dataSetName should be 'foo'
    const dataSetName = file.split('.').length === 3 ? undefined : file.split('.')[2];
    return dataSetName ? [day, part, dataSetName] : [day, part];
}
//# sourceMappingURL=dynamic-tasks.js.map